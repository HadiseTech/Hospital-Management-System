

/*
package main

import (

	//

	"github.com/jinzhu/gorm"
	_ "github.com/jinzhu/gorm/dialects/postgres"
	"github.com/monday271/hospital_server/entity"
)

func main(){


	dbconn, err := gorm.Open("postgres", "postgres://postgres:P@$$w0rDd@localhost/hospital12?sslmode=disable")

	if err != nil {
		panic(err)
	}

	defer dbconn.Close()
	errs:=dbconn.CreateTable(&entity.Role{}).GetErrors()

	errs=dbconn.CreateTable(&entity.Profile{}).AddForeignKey("role_Id","roles(Id)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Pharmacist{}).AddForeignKey("uuid","profiles(Id)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Petient{}).AddForeignKey("uuid","profiles(Id)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Admin{}).AddForeignKey("uuid","profiles(Id)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Doctor{}).AddForeignKey("uuid","profiles(Id)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Laboratorist{}).AddForeignKey("uuid","profiles(Id)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Prescription{}).AddForeignKey("patient_Id","petients(Id)","cascade","cascade").AddForeignKey("doctor_Id","doctors(Id)","cascade","cascade").AddForeignKey("phrmacist_Id","pharmacists(Id)","cascade","cascade").AddForeignKey("patient_name","profiles(full_name)","cascade","cascade").GetErrors()

	errs=dbconn.CreateTable(&entity.Appointment{}).AddForeignKey("patient_Id","petients(Id)","cascade","cascade").AddForeignKey("doctor_Id","doctors(Id)","cascade","cascade").AddForeignKey("patient_name","profiles(full_name)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Diagnosis{}).AddForeignKey("patient_Id","petients(Id)","cascade","cascade").AddForeignKey("doctor_Id","doctors(Id)","cascade","cascade").AddForeignKey("laboratorist_Id","laboratorists(Id)","cascade","cascade").AddForeignKey("patient_name","profiles(full_name)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Medicine{}).AddForeignKey("added_By","pharmacists(Id)","cascade","cascade").GetErrors()
	errs=dbconn.CreateTable(&entity.Request{}).AddForeignKey("patient_Id","petients(Id)","cascade","cascade").AddForeignKey("doctor_Id","doctors(Id)","cascade","cascade").AddForeignKey("approved_By","admins(Id)","cascade","cascade").AddForeignKey("patient_name","profiles(full_name)","cascade","cascade").GetErrors()









	if errs!=nil {
		panic(errs)

	}



}


*/

//INSERT TO TABLES
	/*
	   petient:=entity.Petient{
	   	ID:           0,
	   	Uuid:         1,
	   	Profile:      entity.Profile{},
	   	BloodGroup:   "AB",
	   	Age:          30,
	   	Prescription: nil,
	   	Diagnosis:    nil,
	   	Appointment:  nil,
	   	Request:      nil,
	   }
	   dbconn.Debug().Save(&petient)
	*/
	/*
	   profile:=entity.Profile{
	   	ID:          0,
	   	FullName:    "abebe hello",
	   	Password:    "12345FSDFDJ",
	   	Email:       "GETACHEW@G.COM",
	   	Phone:       "12343jkdskj439434",
	   	Address:     "adama ABABA",
	   	Image:       "doctor.png",
	   	Sex:         "MALE",

	   	Role:        "PETIENT",
	   	BirthDate:   time.Time{},
	   	Description: "INPETIENT IN THIS HOSPITAL",
	   }

	   dbconn.Debug().Save(&profile)
	*/

	/*doctor:=entity.Doctor{
	  	ID:           0,
	  	Profile:      entity.Profile{},
	  	Uuid:         3,
	  	Department:   "surgery",
	  	Prescription: nil,
	  	Diagnosis:    nil,
	  	Appointment:  nil,
	  }
	  parma:=entity.Pharmacist{
	  	ID:           0,
	  	Uuid:         1,
	  	Profile:      entity.Profile{},
	  	Medicine:     nil,
	  	Prescription: nil,
	  }
	  lab:=entity.Laboratorist{
	  	ID:        0,
	  	Uuid:      1,
	  	Profile:   entity.Profile{},
	  	Diagnosis: nil,
	  }
	  dbconn.Save(&doctor)
	  dbconn.Save(&parma)
	  dbconn.Save(&lab)

	*/